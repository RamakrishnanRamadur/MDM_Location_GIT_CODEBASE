global with sharing class MDM_Location_BulkUploadLocationExtbt implements Database.Batchable<MDM_BulkUpload__c>,Database.Stateful{    
global list<MDM_BulkUpload__c> blList;
    global String filename;
    global MDM_Location_BulkUploadLocationExtbt(list<MDM_BulkUpload__c>al, string pfilename){
        blList=al;
        filename = pfilename;
    }
    
    global Iterable<MDM_BulkUpload__c> start(Database.BatchableContext BC){
        //return Database.getQueryLocator(query);
        return blList;
    }
    global void execute(Database.BatchableContext BC, List<MDM_BulkUpload__c> scope){
        insert scope;
    }
    global void finish(Database.BatchableContext BC){
        try
        {
            integer cnt = blList.Size();
            string Msg = 'Your locations file is loaded for validation.';
            
            
            // Get the ID of the AsyncApexJob representing this batch job
            // from Database.BatchableContext.
            // Query the AsyncApexJob object to retrieve the current job's information.
            AsyncApexJob a = [SELECT Id, Status, NumberOfErrors, JobItemsProcessed, TotalJobItems, CreatedBy.Email FROM AsyncApexJob WHERE Id = :BC.getJobId()];
            // Send an email to the Apex job's submitter notifying of job completion.
            Messaging.SingleEmailMessage mail = new Messaging.SingleEmailMessage();
            String[] toAddresses = new String[] {a.CreatedBy.Email};
                mail.setToAddresses(toAddresses);
            mail.setSubject(filename + '  Upload status  - ' + a.Status);
            string Msg1 =  'Upload Date' + Datetime.now().format('MM/dd/yyyy hh:mm a') + ' .\n';
            string Msg2 =  'Name of the upload: '+ filename  +  ' .\n';
            String Msg3 =  'Number of records in file:' + cnt +  ' .\n'; 
            String Msg4 =  'Upload status :' + a.Status +  ' .\n';
            String Msg5 =  'Mastering Location: Pending' +  ' .\n';
            mail.setPlainTextBody(Msg1+Msg2+Msg3+Msg4+Msg5 ); 
            Messaging.sendEmail(new Messaging.SingleEmailMessage[] { mail });
        }
        catch(System.EmailException ex){
            system.debug('============== email exception caught!!!=============');
        }
        //kick of the validation process
        MDM_Location_ValidateLocationbt  objValidatebatch = new MDM_Location_ValidateLocationbt();
        Database.executebatch(objValidatebatch,100);
    }
    public MDM_Location_BulkUploadLocationExtbt(ApexPages.StandardController controller) {
        
        
    }
}